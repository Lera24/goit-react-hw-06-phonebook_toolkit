{"version":3,"sources":["components/Filter/Filter.module.css","redux/contacts-action.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","reportWebVitals.js","redux/store.js","index.js","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addItem","createAction","name","number","payload","id","shortid","generate","removeItem","filterItem","connect","state","contacts","filter","items","normalizeFilter","toLowerCase","includes","dispatch","onDeleteContact","actions","map","contact","className","css","item","type","button","onClick","onAddContact","useState","setName","setNumber","inputNameId","inputTelId","findCurrentValue","e","target","value","onSubmit","preventDefault","find","alert","wrap","htmlFor","input","onChange","pattern","title","required","onFilter","inputFilterId","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducerItems","createReducer","reducerFilter","_","contactsReducer","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.d16c20c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__QlDJD\"};","import shortid from \"shortid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nconst addItem = createAction(\"items/Add\", (name, number) => {\n  return {\n    payload: {\n      id: shortid.generate(),\n      name,\n      number,\n    },\n  };\n});\n\nconst removeItem = createAction(\"items/Remove\");\n\nconst filterItem = createAction(\"items/Filter\");\n\nexport default { addItem, removeItem, filterItem };\n","import PropTypes from \"prop-types\";\nimport actions from \"../../redux/contacts-action\";\nimport { connect } from \"react-redux\";\nimport css from \"./ContactList.module.css\";\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul>\n      {contacts.map((contact) => {\n        return (\n          <li key={contact.id} className={css.item}>\n            <span className={css.name}>{`${contact.name}:`}</span>\n            <span className={css.number}>{contact.number}</span>\n            <button\n              type=\"submit\"\n              className={css.button}\n              onClick={() => onDeleteContact(contact.name)}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  const { filter, items } = state.contacts;\n  const normalizeFilter = filter.toLowerCase();\n  const filterCurrentTel = items.filter(({ name }) =>\n    name.toLowerCase().includes(normalizeFilter)\n  );\n\n  return {\n    contacts: filterCurrentTel,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onDeleteContact: (name) => dispatch(actions.removeItem(name)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onDeleteContact: PropTypes.func,\n};\n","import { useState } from \"react\";\nimport shortid from \"shortid\";\nimport PropTypes from \"prop-types\";\nimport css from \"./ContactForm.module.css\";\nimport actions from \"../../redux/contacts-action\";\nimport { connect } from \"react-redux\";\n\nfunction ContactForm({ contacts, onAddContact }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const inputNameId = shortid.generate();\n  const inputTelId = shortid.generate();\n\n  const findCurrentValue = (e) => {\n    switch (e.target.name) {\n      case \"name\":\n        setName(e.target.value);\n        break;\n\n      case \"number\":\n        setNumber(e.target.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const addContact = (e) => {\n    e.preventDefault();\n    contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    )\n      ? alert(`${name} is already in contacts`)\n      : onAddContact(name, number);\n\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={addContact} className={css.wrap}>\n      <label htmlFor={inputNameId}>\n        Name\n        <input\n          className={css.input}\n          onChange={findCurrentValue}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          id={inputNameId}\n        />\n      </label>\n      <label htmlFor={inputTelId}>\n        Number\n        <input\n          className={css.input}\n          onChange={findCurrentValue}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          id={inputTelId}\n        />\n      </label>\n      <button type=\"submit\" className={css.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    contacts: state.contacts.items,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAddContact: (name, number) => dispatch(actions.addItem(name, number)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n\nContactForm.propTypes = {\n  contacts: PropTypes.array,\n  onAddContact: PropTypes.func,\n};\n","import shortid from \"shortid\";\nimport PropTypes from \"prop-types\";\nimport css from \"./Filter.module.css\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../redux/contacts-action\";\n\nfunction Filter({ filter, onFilter }) {\n  const inputFilterId = shortid.generate();\n\n  return (\n    <label htmlFor={inputFilterId}>\n      Find contacts by name\n      <input\n        className={css.input}\n        onChange={onFilter}\n        type=\"text\"\n        value={filter}\n        id={inputFilterId}\n      />\n    </label>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  filter: state.contacts.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onFilter: (e) => dispatch(actions.filterItem(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onFilter: PropTypes.func,\n};\n","import ContactList from \"./components/ContactList/ContactList\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport \"./App.css\";\n\nexport default function App() {\n  return (\n    <div className=\"wrap\">\n      <h1 className=\"title\">Phonebook</h1>\n      <ContactForm />\n      <h2 className=\"title\">Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"./contacts-action\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport logger from \"redux-logger\";\n\nconst reducerItems = createReducer([], {\n  [actions.addItem]: (state, { payload }) => [payload, ...state],\n  [actions.removeItem]: (state, { payload }) =>\n    state.filter((contact) => contact.name !== payload),\n});\n\nconst reducerFilter = createReducer(\"\", {\n  [actions.filterItem]: (_, { payload }) => payload,\n});\n\nconst contactsReducer = combineReducers({\n  items: reducerItems,\n  filter: reducerFilter,\n});\n\nconst contactsPersistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__2RuVY\",\"name\":\"ContactList_name__1P3ie\",\"button\":\"ContactList_button__2ENec\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"ContactForm_wrap__2T8E5\",\"input\":\"ContactForm_input__-hZo1\",\"button\":\"ContactForm_button__1hBVU\"};"],"sourceRoot":""}